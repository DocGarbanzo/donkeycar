#:import TsPlot donkeycar.management.graph.TsPlot


<ConfigManager>
    title: 'Choose the car directory'
    orientation: 'vertical'
    on_config:
        app.root.ids.tub_screen.ids.tub_loader.ids.tub_button.disabled = False
        app.root.ids.tub_screen.ids.tub_loader.root_path = self.file_path
        app.root.ids.pilot_screen.ids.pilot_loader_1.root_path = self.config.MODELS_PATH
        app.root.ids.pilot_screen.ids.pilot_loader_2.root_path = self.config.MODELS_PATH
        app.root.ids.train_screen.config = self.config
        app.root.ids.tub_screen.ids.status.text = 'Config loaded from' + self.file_path
    Header:
        title: "Config"
        description: "Load the config from the car directory"
    BoxLayout:
        orientation: 'horizontal'
        RoundedButton:
            text: 'Load car directory'
            size_hint_x: 0.5
            on_press: root.open_popup()
        MyLabel:
            id: car_dir
            text: root.file_path


<TubLoader>
    title: 'Choose the tub directory'
    orientation: 'horizontal'
    Button:
        id: tub_button
        text: 'Load tub'
        size_hint_x: 0.5
        disabled: True
        on_press: root.open_popup()
    AutoLabel:
        id: tub_dir
        text: root.file_path


<TubEditor>
    orientation: 'horizontal'
    on_lr:
        msg = f'Setting range, '
        if root.lr[0] < root.lr[1]: msg += (f'affecting records inside [{root.lr[0]}, {root.lr[1]}) ' + \
        '- you can affect records outside by setting left > right')
        else: msg += (f'affecting records outside ({root.lr[1]}, {root.lr[0]}] ' + \
        '- you can affect records inside by setting left < right')
        app.root.ids.tub_screen.ids.status.text = msg
    Button:
        text: 'Set left'
        on_press: root.set_lr(True)
    Button:
        text: 'Set right'
        on_press: root.set_lr(False)
    Label:
        text: '[' + str(root.lr[0]) + ', ' + str(root.lr[1]) + ')'
    Button:
        text: 'Delete'
        on_press:
            root.del_lr(True)
            msg = f'Delete records {root.lr} - press <Reload tub> to see the ' \
            + f'effect, but you can delete multiple ranges before doing so.'
            app.root.ids.tub_screen.ids.status.text = msg
    Button:
        text: 'Restore'
        on_press:
            root.del_lr(False)
            msg = f'Restore records {root.lr} - press <Reload tub> to see the ' \
            + f'effect, but you can restore multiple ranges before doing so.'
            app.root.ids.tub_screen.ids.status.text = msg
    Button:
        text: 'Reload Tub'
        on_press:
            app.root.ids.tub_screen.ids.tub_loader.update_tub()

<TubFilter>:
    id: tub_filter
    orientation: 'horizontal'
    Button:
        text: 'Set filter'
        size_hint_x: 0.2
        on_press: root.update_filter()
    TextInput:
        id: record_filter
        text: root.record_filter
        multiline: False
        on_focus: app.root.ids.tub_screen.keys_enabled = not app.root.ids.tub_screen.keys_enabled


<DataPlot>:
    Button:
        text: 'Reload Graph'
        on_press: root.plot_from_current_bars()
    Button:
        text: 'Browser Graph'
        on_press: root.plot_from_current_bars(in_app=False)


<TubScreen>:
    name: 'tub'
    BoxLayout:
        padding: 20
        spacing: 20
        orientation: 'vertical'
        TabBar:
            id: tab_bar
            manager: root.manager
        BoxLayout:
            orientation: 'horizontal'
            ConfigManager:
                id: config_manager
            TubLoader:
                id: tub_loader

        PaddedBoxLayout:
            size_hint_y: 1.0
            DataPanel:
                id: data_panel
                screen: root
                record: root.current_record
            FullImage:
                id: img
            ControlPanel
                id: control_panel
                screen: root
        Slider:
            id: slider
            min: 0
            max: tub_loader.len - 1
            value: 0
            size_hint_y: None
            height: common_height
            on_value: root.index = int(self.value)
        TubEditor
        TubFilter:
            id: tub_filter
        TsPlot:
            id: graph
        DataPlot:
            id: data_plot
        StatusLabel:
            id: status