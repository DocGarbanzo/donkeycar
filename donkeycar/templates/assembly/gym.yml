
parts:
  - donkeygymenv:
      arguments:
        sim_path: cfg.DONKEY_SIM_PATH
        host: cfg.SIM_HOST
        env_name: cfg.DONKEY_GYM_ENV_NAME
        conf: cfg.GYM_CONF
        delay: cfg.SIM_ARTIFICIAL_LATENCY
      inputs: [angle, throttle]
      outputs: [cam/image_array, pos/pos, pos/speed, pos/cte, gyro, accel, vel,
                lidar/dist_array]
      threaded: true
  - localwebcontroller:
      inputs: [cam/image_array, tub/current_index]
      outputs: [user/angle, user/throttle, user/mode, recording]
      threaded: true
  - checker:
      # check if user/mode is local or local_angle because then we run pilot
      arguments:
        must_match: [local, local_angle]
      inputs: [user/mode]
      outputs: [run_pilot]
  - checker:
    # check if user/mode is user or local_angle because then we use user/throttle
      arguments:
        must_match: [user, local_angle]
      inputs: [user/mode]
      outputs: [use_user/throttle]
  - keraspilot:
      inputs: [ cam/image_array ]
      outputs: [ pilot/angle, pilot/throttle ]
      run_condition: run_pilot
  - dispatcher:
    # if run_pilot is true (i.e. == 1) return pilot/angle otherwise user/angle
      inputs: [run_pilot, user/angle, pilot/angle]
      outputs: [angle]
  - dispatcher:
    # if user_throttle is true return user/throttle else return pilot/throttle
      inputs: [use_user/throttle, pilot/throttle, user/throttle]
      outputs: [throttle]
  - tubwriter:
      arguments:
        inputs: [cam/image_array, user/angle, user/throttle, user/mode,
                 pos/pos, pos/speed, pos/cte, gyro, accel, vel,
                 lidar/dist_array]
        types: [image_array, float, float, str, vector, float, float, vector,
                vector, vector, nparray]
      inputs: [cam/image_array, user/angle, user/throttle, user/mode,
               pos/pos, pos/speed, pos/cte, gyro, accel, vel,
               lidar/dist_array]
      outputs: [tub/current_index]
      run_condition: recording
