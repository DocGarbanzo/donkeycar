
parts:
  - cvcam:
      outputs: [cam/image_array]
      threaded: true
      run_condition: run_pilot
  - imagelistcamera:
      arguments:
        path_mask: "/home/dirk/car_test/data/images/*.jpg"
      outputs: [cam/image_array]
      threaded: false
      enable: false
  - localwebcontroller:
      enable: not cfg.USE_JOYSTICK_AS_DEFAULT
      inputs: [cam/image_array, tub/current_index]
      outputs: [user/angle, user/throttle, user/mode, recording]
      threaded: true
  - webfpv:
      enable: False
      inputs: [cam/image_array]
      threaded: true
  - checker:
      arguments:
        must_match: [local, local_angle]
      inputs: [user/mode]
      outputs: [run_pilot]
  - keraspilot:
      arguments:
        model_type: linear
      inputs: [cam/image_array]
      outputs: [pilot/angle, pilot/throttle]
      run_condition: run_pilot
  - dispatcher:
      # if run_pilot is true (i.e. == 1) return pilot/angle otherwise user/angle
      inputs: [run_pilot, user/angle, pilot/angle]
      outputs: [angle]
  - checker:
      # check if user/mode is user or local_angle because then we use user/throttle
      arguments:
        must_match: [user, local_angle]
      inputs: [user/mode]
      outputs: [use_user/throttle]
  - dispatcher:
    # if use_user/throttle is true return user/throttle else return pilot/throttle
      inputs: [use_user/throttle, pilot/throttle, user/throttle]
      outputs: [throttle]
  - pwmsteering:
      inputs: [angle]
  - pwmthrottle:
      inputs: [throttle]
  - tubwriter:
      arguments:
        inputs: [cam/image_array, user/angle, user/throttle, user/mode,
                 pilot/angle, pilot/throttle]
        types: [image_array, float, float, str, float, float]
      inputs: [cam/image_array, user/angle, user/throttle, user/mode,
               pilot/angle, pilot/throttle]
      outputs: [tub/current_index]
      run_condition: recording
